(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> enter_category() takes no arguments (1 given)"
p3
sS'layer'
p4
S'/home/rashmi/Desktop/SCEPrjct/web2py/applications/IIIT_MarketPlace/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\nimport datetime\n    \ndef enter_category():\n    form.vars.category=form.vars.cat_dropdown\n    \ndef post_Add():\n    form=SQLFORM(db.advertise)\n    form.vars.add_type="sell"\n    form.vars.status="open"\n    form.vars.ppl_bid=0\n   # form=form.process(next=\'index\')\n    my_extra_element = TR(LABEL(\'Category\'),SELECT(\'Hostelhold\',\'Electronics\',\'Vehicles\', \'others\',_name="cat_dropdown", value="Hostelhold"))\n    form[0].insert(-1,my_extra_element)    \n    form=form.process(onvalidation=enter_category)\n    \n    if form.accepted:\n        session.flash="Posted Successfully"\n        redirect(URL(\'index\'))\n    #db.advertise.post_date=request.now()\n    return locals()\n\ndef view_bidders():\n    query=(db.bidding.add_id==request.args(0)) & (db.advertise.id==request.args(0))\n    rows=db(db.advertise.id==request.args(0)).select()\n    bidder_rows=db(query).select()\n    bid_form=SQLFORM(db.bidding)\n    bid_form.vars.bidder_user_id=auth.user_id\n    bid_form.vars.bidder_user_fn=auth.user.first_name\n    bid_form.vars.bidder_user_ln=auth.user.last_name\n    bid_form.vars.bid_datetime=datetime.datetime.utcnow()\n    bid_form.vars.add_id=request.args(0,cast=int)\n    bid_form.process()\n    return locals()\n\ndef sell_to_buyer():\n    add_query=(db.advertise.id==request.args(1))\n    if mail:\n        bidder_rows=db(db.auth_user.id==request.args(0)).select()\n        x=mail.send(to=[bidder_rows.email],subject="hi",message="test")    \n    if x==True:\n        db(add_query).update(status=\'closed\')\n        db(add_query).update(sold_to=request.args(1))\n        response.flash = T("Email sent to user");\n    else:\n        response.flash= T("Mail not sent");\n        \n\n    return locals()\n\ndef view_Add():\n    #auth_user_with_role = db(db.auth_membership.group_id==request.vars.role).select(d\n    #rows=db(db.advertise.id==request.args(0)).select()\n    ############bidding_rows=db(db.bidding.add_id==request.args(0)).select()\n    query=(db.bidding.add_id==request.args(0)) & (db.advertise.id==request.args(0))\n    rows=db(db.advertise.id==request.args(0)).select()\n    bidder_rows=db(query).select()\n    bid_form=SQLFORM(db.bidding)\n    bid_form.vars.bidder_user_id=auth.user_id\n    bid_form.vars.bidder_user_fn=auth.user.first_name\n    bid_form.vars.bidder_user_ln=auth.user.last_name\n    bid_form.vars.bid_datetime=datetime.datetime.utcnow()\n    bid_form.vars.add_id=request.args(0,cast=int)\n    bid_form.process()\n    if bid_form.accepted:\n        session.flash="Bidded Successfully"\n\n    #bidder_rows=db(db.bidding.add_id==request.args(0)).select()\n   # bidders_rows=db().select()\n   # users = db(db.auth_user.id>=1).select(db.auth_user.ALL)\n    #for user in users:\n       # response.write(user.id)\n       # user_rows=db(db.auth_user.id==user.id).select(db.auth_user.first_name)\n    #    ad_rows=db(db.advertise.created_by==user.id).select()\n   # user_name=db(db.advertise.created_by).select(auth_user.firstname)\n    return locals()\n\n@auth.requires_login()\ndef index():\n   if len(request.args):\n        page=int(request.args[0])\n   else:\n        page=0\n   items_per_page=8\n   limitby=(page*items_per_page,(page+1)*items_per_page+1)\n   rows=db().select(db.advertise.ALL,limitby=limitby)\n   # response.flash = T("Welcome to web2py!")\n   return locals()\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n    \n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\nresponse._vars=response._caller(post_Add)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/applications/IIIT_MarketPlace/controllers/default.py", line 152, in <module>\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/applications/IIIT_MarketPlace/controllers/default.py", line 24, in post_Add\n    form=form.process(onvalidation=enter_category)\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/html.py", line 2303, in process\n    self.validate(**kwargs)\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/html.py", line 2240, in validate\n    if self.accepts(**kwargs):\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/sqlhtml.py", line 1455, in accepts\n    **kwargs\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/html.py", line 2141, in accepts\n    call_as_list(onvalidation, self)\n  File "/home/rashmi/Desktop/SCEPrjct/web2py/gluon/html.py", line 146, in call_as_list\n    item(*a,**b)\nTypeError: enter_category() takes no arguments (1 given)\n'
p11
s.